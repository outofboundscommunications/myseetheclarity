<?php$resource_args_array = array(	'public'         => true,	'show_ui'        => true,	'capability_type'=> 'post',	'hierarchical'   => false,	'rewrite'        => array('slug'=> 'resources/restype'),	'query_var'      => true,	'supports' => array(		'title',		'editor',		'thumbnail',		// 'custom-fields',		'page-attributes',	),	'exclude_from_search' => true,	'labels'              => array(		'name'              => _x( 'Resources', 'twentytwelve' ),		'singular_name'     => _x( 'Resource', 'twentytwelve' ),		'add_new'           => _x( 'Add New', 'twentytwelve' ),		'add_new_item'      => _x( 'Add New Resource', 'twentytwelve' ),		'edit_item'         => _x( 'Edit Resource', 'twentytwelve' ),		'new_item'          => _x( 'New Resource', 'twentytwelve' ),		'view_item'         => _x( 'View Resource', 'twentytwelve' ),		'search_items'      => _x( 'Search Resource', 'twentytwelve' ),		'not_found'         => _x( 'No Resource found', 'twentytwelve' ),		'not_found_in_trash'=> _x( 'No Resource in Trash', 'twentytwelve' ),		'parent_item_colon' => _x( 'Parent Resource:', 'twentytwelve' ),		'menu_name'         => _x( 'Resources', 'twentytwelve' ),	));sd_register_post_type( 'resource', $resource_args_array, 'resources' );// Resources post typefunction post_type_resources() {		register_taxonomy('restype','resource',	array(		'label'            => 'Types',		'rewrite'          => array(			'slug'            => 'resources',			'with_front'      => false		),		'hierarchical'     => true,		'single_value'     => true,		'show_admin_column'=> true,	));	}add_action('init', 'post_type_resources');/****************************************************** *   *  Register Columns for Custom Post Type. *   ******************************************************/function project_add_column($columns) {		$new_columns = array(		'cb'                      => '<input type="checkbox" />',		'project_thumbnail'       => __(''),		'title'                   => __('Title'),		'project_status'        => __('Status'),		'date'                    => __('Date'),		// 'project_order'        => __('Order'),	);		return $new_columns;	}add_filter( 'manage_edit-project_columns' , 'project_add_column');/****************************************************** *   *  Render data for registered columns. *   ******************************************************/function project_column( $column_name, $post_id ){	global $wpdb, $post;		switch ($column_name) {				case 'project_order' :			$curr_post_data = get_post( $post_id );			echo $curr_post_data->menu_order;			break;				case 'project_status' :			$project_status = get_field( 'project_status', $post_id );			$project_stat = array(				'upcoming'     => 'Upcoming Project',				'completed'    => 'Completed',				'construction' => 'Under Construction',			);			if( !empty($project_status) ){				echo $project_stat[$project_status];			}			/*			if( $project_status == 1 ){				echo '<i class="icon-check icon-2"></i>';			}			*/			break;				case 'project_thumbnail' :			if( has_post_thumbnail( $post_id ) ){				$header_image_size = 'admin_thumb';				$header_image_data = wp_get_attachment_image_src( get_post_thumbnail_id( $post->ID ), $header_image_size );				$header_image_src = $header_image_data[0];				$header_image_width = $header_image_data[1];				$header_image_height = $header_image_data[2];			}else{				// $header_image_src = get_stylesheet_directory_uri() . '/assets/images/no-image/no_image_60x60.png';				// $header_image_width = 60;				// $header_image_height = 60;			}			if( !empty($header_image_src) ){				?>				<img src="<?php echo $header_image_src;?>" alt="<?php the_title(); ?>" width="<?php echo $header_image_width;?>" height="<?php echo $header_image_height;?>" />				<?php			}			break;				default:			break;			} // end switch}add_action( 'manage_project_posts_custom_column' , 'project_column', 10, 2 );?>